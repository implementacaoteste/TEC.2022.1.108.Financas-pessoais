<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Id.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Contato.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Valor.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="FormaPagamento.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Banco.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="DataEmissao.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="despesasBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>390, 1</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AADQnP8HmgpSAWasGjcAAAAASUVORK5CYII=
</value>
  </data>
</root>